#!/bin/bash

Tmp="/tmp/$USER/lure/tmp"
Doc="$HOME/opt/lua/lure/doc"

mkdir -p $Tmp $Doc

cat<<EOF>$Tmp/vimrc
        set backupdir-=.
	set backupdir^=~/tmp,/tmp
	set nocompatible              " required
	filetype plugin indent on
	set modelines=3
	set scrolloff=3
	set autoindent
	set hidden "remember ls
	set wildmenu
	set wildmode=list:longest
	set visualbell
	set ttyfast
	set backspace=indent,eol,start
	set laststatus=2
	set splitbelow
	set mouse=a
	set title
	set number
	autocmd BufEnter * cd %:p:h
	set showmatch
	set matchtime=15
	set background=light
	set syntax=on
	syntax enable
	set ignorecase
	set incsearch
	set smartcase
	set showmatch
	set hlsearch
	colorscheme delek 
	set hlsearch!
	nnoremap <F3> :set hlsearch!<CR>
	set ruler
	set formatoptions+=cro
EOF
doc() {
  for f in *.lua; do
    g=$(basename $f ".lua")
    g="$Doc/$g.html"
    if [ "$f" -nt "$g" ]; then
       pycco -d $Doc $f
    fi
  done
}
if [ -z "$1" ]; then
  echo "Type './lure help' for a list of options"
  doc
else
  x=$1
  shift
  echo "$*"
  if   [[ "$x" == "ed"      ]]; then vim -u $Tmp/vimrc $1
  elif [[ "$x" == "zap"     ]]; then rm -f $Doc/*.md
  elif [[ "$x" == "pull"    ]]; then git pull
  elif [[ "$x" == "doc"     ]]; then doc
  elif [[ "$x" == "help"    ]]; then help
  elif [[ "$x" == "okay"    ]]; then lua -i "tests()" lib.lua
  elif [[ "$x" == "push"    ]]; then
     git status
     git commit -am "commiting"
     git push
  else
    g=$(basename $x ".lua")
    MAIN="$g" lua "$g.lua"
  fi
fi
